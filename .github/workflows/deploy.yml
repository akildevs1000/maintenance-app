name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main # Trigger deployment on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18" # Adjust based on your project requirements

      - name: Install dependencies
        run: npm install # Install dependencies

      - name: Generate static files
        env:
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
        run: npm run generate # Use `generate` if you're using Nuxt.js or another static site generator

      - name: Install SSH client
        run: sudo apt-get install -y sshpass

      # - name: Deploy to DigitalOcean
      #   env:
      #     SERVER_IP: ${{ secrets.SERVER_IP }}
      #     SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      #     SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      #   run: |
      #     # Move existing files to a versioned folder
      #     sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USERNAME@$SERVER_IP" \
      #     'if [ -d /var/www/myhotel2cloud/maintenance-app ]; then
      #        TIMESTAMP=$(date +"%Y%m%d%H%M%S");
      #        mv /var/www/myhotel2cloud/maintenance-app /var/www/myhotel2cloud/maintenance-app-version-$TIMESTAMP;
      #      fi'

      #     # Create the target directory if it doesn't exist
      #      mkdir -p /var/www/myhotel2cloud/maintenance-app'

      #     # Upload the new files
      #     sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -r dist/* "$SSH_USERNAME@$SERVER_IP:/var/www/myhotel2cloud/maintenance-app/"

      - name: Deploy to DigitalOcean
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USERNAME@$SERVER_IP" \
          'if [ -d /var/www/myhotel2cloud/maintenance-app ]; then
             TIMESTAMP=$(date +"%Y%m%d%H%M%S");
             cp -r /var/www/myhotel2cloud/maintenance-app /var/www/myhotel2cloud/maintenance-app-backup-version-$TIMESTAMP;
           fi'

          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -r dist/* "$SSH_USERNAME@$SERVER_IP:/var/www/myhotel2cloud/maintenance-app/"
